Add additional feature extractors [~2 hours total]:
 - Length feature (easy) [30 min]
 - Curvature feature (easy) [60 min]
 - Concavity feature (easy) [30 min]
 - Start/end point feature (easy) [15 min]

Edit/restructuring/refactoring [6 hours total]:
 - Trackpad class (medium - probably will get rid of ~300 lines of redundant code) [2 hours]
 - knn.py (easy - just need to condense some code, (a lot was written to facilitate testing early on)) [1 hour]
 - process.py (very hard - need to rethink the entire pipeline and where to extract features) [3 hours]

Feature normalization (very hard) [5 hours]:
 - I plan on adding a few more features, thus increasing the dimensionality of the feature vector. Thus, knn performance depends on the appropriate scaling of each feature. I may have to find ways to combine features to reduce dimensionality a little. (Dimensions are still much less than 50, so it’s very possible that I can get away with using around 10, properly scaled and normalized components.)

Improving the main program/adding usability features, training screen, etc. (medium) [3 hours]
 - This just requires time to code, no design/architecture questions that need to be addressed.

Extending the character set (if feasible) [variable]
 - If I can achieve reasonably high accuracy, I will extend the character set. This won’t require significant time, as I plan for the final program to be a customizable. Thus, vast amounts of data aren’t really necessary, and taking that data would just waste time.
